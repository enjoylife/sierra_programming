#BlueJ class context
comment0.params=players\ cards
comment0.target=Conc(int,\ int)
comment1.params=
comment1.target=void\ initalizeCards()
comment1.text=Set\ the\ cards\ arrary\ obj's.Values\ to\ have\ a\ matching\ id
comment2.params=
comment2.target=void\ cards()
comment3.params=cardV
comment3.target=int\ getCardIndex(int)
comment3.text=helper\ to\ get\ the\ index\ after\ shuffle
comment4.params=
comment4.target=int\ getCardsRemain()
comment4.text=Sum\ all\ cards\ that\ have\ a\ negative\ status\ (AKA\ their\ out\ of\ play)
comment5.params=
comment5.target=boolean\ isGameOver()
comment5.text=\n\ isGameOver\ \:\ none\ ->\ boolean\n\ Return\ whether\ the\ game\ is\ over\ or\ not.\n
comment6.params=
comment6.target=int\ whoWon()
comment6.text=\n\ whoWon\ \:\ none\ ->\ int\n\ Return\ the\ player\ number\ of\ the\ winner\ or\n\ zero\ if\ the\ game\ is\ not\ over\ yet.\n
comment7.params=cardIndex
comment7.target=boolean\ isValidMove(int)
comment7.text=\n\ isValidMove\ \:\ int\ ->\ boolean\n\ Given\ the\ card\ ,\ return\ whether\n\ it\ is\ valid\ to\ turn\ that\ card\ over.\ True\ if\ it\ is,\ false\ otherwise\n
comment8.params=card\ player
comment8.target=int\ move(int,\ int)
comment8.text=\ Move\ ->int\ ,\ int\ ->\ int\n\ Given\ an\ index\ to\ both\ a\ player\ and\ a\ card,\ turn\ the\ card\ status\ \n\ to\ out\ of\ play\ and\ increase\ the\ cards\ clicked\ and\ return\ 0\ if\ player\ needs\ to\ go\ again,\ 1\ if\ cards\n\ \ match,\ or\ 2\ if\ they\ dont\ match\n
comment9.params=
comment9.target=void\ shuffle()
comment9.text=Poor\ implementation\ of\ a\ shuffle
numComments=10
